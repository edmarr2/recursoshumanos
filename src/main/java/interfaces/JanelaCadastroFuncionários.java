/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;
import controle.ControladorEmpregado;
import controle.ControladorEstagiário;
import controle.ControladorTerceirizado;
import controle.ControladorFuncionário;
import entidade.Funcionário;
import java.util.List;
import javax.swing.ButtonModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author edmar
 */
public class JanelaCadastroFuncionários extends javax.swing.JFrame {
    private ControladorEmpregado controladorEmpregado;
    private ControladorEstagiário controladorEstagiário;
    private ControladorTerceirizado controladorTerceirizado;
    private ControladorFuncionário controladorFuncionário;
    /**
     * Creates new form JanelaRecursosHumanos
     */
    public JanelaCadastroFuncionários() {
        controladorEmpregado = new ControladorEmpregado();
        controladorEstagiário = new ControladorEstagiário();
        controladorTerceirizado = new ControladorTerceirizado();
        controladorFuncionário = new ControladorFuncionário();
        
        initComponents();
        inicializarListaFuncionários();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    public JanelaCadastroFuncionários(ControladorFuncionário aThis) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generoButtonGroup = new javax.swing.ButtonGroup();
        estadoCivilButtonGroup = new javax.swing.ButtonGroup();
        pontuaçãoButtonGroup = new javax.swing.ButtonGroup();
        nomeFuncionárioLabel = new javax.swing.JLabel();
        cargoFuncionárioLabel = new javax.swing.JLabel();
        salárioFuncionárioLabel = new javax.swing.JLabel();
        nomeFuncionárioTextField = new javax.swing.JTextField();
        cargoFuncionárioTextField = new javax.swing.JTextField();
        salárioFuncionárioTextField = new javax.swing.JTextField();
        cadastrarFuncionárioButton = new javax.swing.JButton();
        atualizarFuncionárioButton = new javax.swing.JButton();
        limparCamposButton = new javax.swing.JButton();
        removerFuncionárioButton = new javax.swing.JButton();
        buscarFuncionárioButton = new javax.swing.JButton();
        idFuncionárioLabel = new javax.swing.JLabel();
        cpfFuncionárioTextField = new javax.swing.JTextField();
        funcionáriosScrollPane = new javax.swing.JScrollPane();
        funcionáriosCadastradosList = new javax.swing.JList<>();
        listagemFuncionáriosLabel = new javax.swing.JLabel();
        masculinoRadioButton = new javax.swing.JRadioButton();
        generoFuncionárioLabel = new javax.swing.JLabel();
        femininoRadioButton = new javax.swing.JRadioButton();
        estadoCivilFuncionárioLabel = new javax.swing.JLabel();
        solteiroRadioButton = new javax.swing.JRadioButton();
        casadoRadioButton = new javax.swing.JRadioButton();
        divorciadoRadioButton = new javax.swing.JRadioButton();
        viúvoRadioButton = new javax.swing.JRadioButton();
        ativoFuncionárioLabel = new javax.swing.JLabel();
        ativoCheckBox = new javax.swing.JCheckBox();
        subclassesTabbedPane = new javax.swing.JTabbedPane();
        empregadoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        avaliaçãoDesempenhoLabel = new javax.swing.JLabel();
        departamentoTextField = new javax.swing.JTextField();
        umPontoRadioButton = new javax.swing.JRadioButton();
        doisPontoRadioButton = new javax.swing.JRadioButton();
        tresPontosRadioButton = new javax.swing.JRadioButton();
        quatroPontoRadioButton = new javax.swing.JRadioButton();
        cincoPontosRadioButton = new javax.swing.JRadioButton();
        estagiárioPanel = new javax.swing.JPanel();
        cursoLabel = new javax.swing.JLabel();
        cargaHorariaLabel = new javax.swing.JLabel();
        cursoTextField = new javax.swing.JTextField();
        cargaHorariaTextField = new javax.swing.JTextField();
        terceirizadoPanel = new javax.swing.JPanel();
        empresaContratadaTextField = new javax.swing.JTextField();
        empresaContratadaLabel = new javax.swing.JLabel();
        duraçãoContratoLabel = new javax.swing.JLabel();
        duracaoContratoTextField = new javax.swing.JTextField();
        cpfFuncionárioLabel = new javax.swing.JLabel();
        idFuncionárioTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro Funcionários");

        nomeFuncionárioLabel.setText("Nome:");

        cargoFuncionárioLabel.setText("Cargo:");

        salárioFuncionárioLabel.setText("Salário:");

        nomeFuncionárioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeFuncionárioTextFieldActionPerformed(evt);
            }
        });

        cargoFuncionárioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargoFuncionárioTextFieldActionPerformed(evt);
            }
        });

        salárioFuncionárioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salárioFuncionárioTextFieldActionPerformed(evt);
            }
        });
        salárioFuncionárioTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                salárioFuncionárioTextFieldKeyTyped(evt);
            }
        });

        cadastrarFuncionárioButton.setText("Adicionar");
        cadastrarFuncionárioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarFuncionárioButtonActionPerformed(evt);
            }
        });

        atualizarFuncionárioButton.setText("Atualizar");
        atualizarFuncionárioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarFuncionárioButtonActionPerformed(evt);
            }
        });

        limparCamposButton.setText("Limpar Campos");
        limparCamposButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparCamposButtonActionPerformed(evt);
            }
        });

        removerFuncionárioButton.setText("Remover");
        removerFuncionárioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerFuncionárioButtonActionPerformed(evt);
            }
        });

        buscarFuncionárioButton.setText("Buscar");
        buscarFuncionárioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarFuncionárioButtonActionPerformed(evt);
            }
        });

        idFuncionárioLabel.setText("ID:");
        idFuncionárioLabel.setEnabled(false);

        cpfFuncionárioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfFuncionárioTextFieldActionPerformed(evt);
            }
        });

        funcionáriosCadastradosList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        funcionáriosCadastradosList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                funcionáriosCadastradosListValueChanged(evt);
            }
        });
        funcionáriosScrollPane.setViewportView(funcionáriosCadastradosList);

        listagemFuncionáriosLabel.setText("Funcionários");

        generoButtonGroup.add(masculinoRadioButton);
        masculinoRadioButton.setMnemonic('M');
        masculinoRadioButton.setText("Masculino");
        masculinoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masculinoRadioButtonActionPerformed(evt);
            }
        });

        generoFuncionárioLabel.setText("Gênero:");

        generoButtonGroup.add(femininoRadioButton);
        femininoRadioButton.setMnemonic('F');
        femininoRadioButton.setText("Feminino");
        femininoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femininoRadioButtonActionPerformed(evt);
            }
        });

        estadoCivilFuncionárioLabel.setText("Estado Civil:");

        estadoCivilButtonGroup.add(solteiroRadioButton);
        solteiroRadioButton.setMnemonic('0');
        solteiroRadioButton.setText("Solteiro");
        solteiroRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solteiroRadioButtonActionPerformed(evt);
            }
        });

        estadoCivilButtonGroup.add(casadoRadioButton);
        casadoRadioButton.setMnemonic('1');
        casadoRadioButton.setText("Casado");
        casadoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casadoRadioButtonActionPerformed(evt);
            }
        });

        estadoCivilButtonGroup.add(divorciadoRadioButton);
        divorciadoRadioButton.setMnemonic('2');
        divorciadoRadioButton.setText("Divorciado");
        divorciadoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divorciadoRadioButtonActionPerformed(evt);
            }
        });

        estadoCivilButtonGroup.add(viúvoRadioButton);
        viúvoRadioButton.setMnemonic('3');
        viúvoRadioButton.setText("Viúvo");
        viúvoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viúvoRadioButtonActionPerformed(evt);
            }
        });

        ativoFuncionárioLabel.setText("Situação:");

        ativoCheckBox.setSelected(true);
        ativoCheckBox.setText("Ativo");
        ativoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ativoCheckBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Departamento:");

        avaliaçãoDesempenhoLabel.setText("Avaliação de desempenho:");

        departamentoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentoTextFieldActionPerformed(evt);
            }
        });

        pontuaçãoButtonGroup.add(umPontoRadioButton);
        umPontoRadioButton.setText("1");
        umPontoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umPontoRadioButtonActionPerformed(evt);
            }
        });

        pontuaçãoButtonGroup.add(doisPontoRadioButton);
        doisPontoRadioButton.setText("2");

        pontuaçãoButtonGroup.add(tresPontosRadioButton);
        tresPontosRadioButton.setText("3");
        tresPontosRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresPontosRadioButtonActionPerformed(evt);
            }
        });

        pontuaçãoButtonGroup.add(quatroPontoRadioButton);
        quatroPontoRadioButton.setText("4");

        pontuaçãoButtonGroup.add(cincoPontosRadioButton);
        cincoPontosRadioButton.setText("5");

        javax.swing.GroupLayout empregadoPanelLayout = new javax.swing.GroupLayout(empregadoPanel);
        empregadoPanel.setLayout(empregadoPanelLayout);
        empregadoPanelLayout.setHorizontalGroup(
            empregadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empregadoPanelLayout.createSequentialGroup()
                .addGroup(empregadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(avaliaçãoDesempenhoLabel)
                    .addComponent(departamentoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 314, Short.MAX_VALUE))
            .addGroup(empregadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(umPontoRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doisPontoRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tresPontosRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quatroPontoRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cincoPontosRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        empregadoPanelLayout.setVerticalGroup(
            empregadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empregadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departamentoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(avaliaçãoDesempenhoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(empregadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(umPontoRadioButton)
                    .addComponent(doisPontoRadioButton)
                    .addComponent(tresPontosRadioButton)
                    .addComponent(quatroPontoRadioButton)
                    .addComponent(cincoPontosRadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subclassesTabbedPane.addTab("Empregado", empregadoPanel);

        cursoLabel.setText("Curso:");

        cargaHorariaLabel.setText("Carga Horaria:");

        cargaHorariaTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cargaHorariaTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout estagiárioPanelLayout = new javax.swing.GroupLayout(estagiárioPanel);
        estagiárioPanel.setLayout(estagiárioPanelLayout);
        estagiárioPanelLayout.setHorizontalGroup(
            estagiárioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estagiárioPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(estagiárioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cursoLabel)
                    .addComponent(cargaHorariaLabel)
                    .addComponent(cursoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargaHorariaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        estagiárioPanelLayout.setVerticalGroup(
            estagiárioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estagiárioPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cursoLabel)
                .addGap(7, 7, 7)
                .addComponent(cursoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cargaHorariaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cargaHorariaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subclassesTabbedPane.addTab("Estagiário", estagiárioPanel);

        empresaContratadaLabel.setText("Empresa Contratada:");

        duraçãoContratoLabel.setText("Duração do Contrato:");

        duracaoContratoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracaoContratoTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout terceirizadoPanelLayout = new javax.swing.GroupLayout(terceirizadoPanel);
        terceirizadoPanel.setLayout(terceirizadoPanelLayout);
        terceirizadoPanelLayout.setHorizontalGroup(
            terceirizadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(terceirizadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(terceirizadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empresaContratadaLabel)
                    .addComponent(duraçãoContratoLabel)
                    .addComponent(empresaContratadaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duracaoContratoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        terceirizadoPanelLayout.setVerticalGroup(
            terceirizadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(terceirizadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(empresaContratadaLabel)
                .addGap(7, 7, 7)
                .addComponent(empresaContratadaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(duraçãoContratoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duracaoContratoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subclassesTabbedPane.addTab("Terceirizado", terceirizadoPanel);

        cpfFuncionárioLabel.setText("CPF:");

        idFuncionárioTextField.setEnabled(false);
        idFuncionárioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFuncionárioTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(listagemFuncionáriosLabel)
                                .addGap(64, 64, 64)
                                .addComponent(funcionáriosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(nomeFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(88, 88, 88)
                                .addComponent(nomeFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cargoFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(88, 88, 88)
                                .addComponent(cargoFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(salárioFuncionárioLabel)
                                .addGap(88, 88, 88)
                                .addComponent(salárioFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(generoFuncionárioLabel)
                                .addGap(253, 253, 253)
                                .addComponent(ativoFuncionárioLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(masculinoRadioButton)
                                .addGap(2, 2, 2)
                                .addComponent(femininoRadioButton)
                                .addGap(156, 156, 156)
                                .addComponent(ativoCheckBox))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(estadoCivilFuncionárioLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(solteiroRadioButton)
                                .addGap(0, 0, 0)
                                .addComponent(casadoRadioButton)
                                .addGap(0, 0, 0)
                                .addComponent(divorciadoRadioButton)
                                .addGap(6, 6, 6)
                                .addComponent(viúvoRadioButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(subclassesTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cadastrarFuncionárioButton)
                                .addGap(31, 31, 31)
                                .addComponent(buscarFuncionárioButton)
                                .addGap(29, 29, 29)
                                .addComponent(atualizarFuncionárioButton)
                                .addGap(28, 28, 28)
                                .addComponent(removerFuncionárioButton)
                                .addGap(24, 24, 24)
                                .addComponent(limparCamposButton)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cpfFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cpfFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(idFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listagemFuncionáriosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(funcionáriosScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(idFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cargoFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargoFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salárioFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salárioFuncionárioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generoFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ativoFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masculinoRadioButton)
                    .addComponent(femininoRadioButton)
                    .addComponent(ativoCheckBox))
                .addGap(2, 2, 2)
                .addComponent(estadoCivilFuncionárioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(solteiroRadioButton)
                    .addComponent(casadoRadioButton)
                    .addComponent(divorciadoRadioButton)
                    .addComponent(viúvoRadioButton))
                .addGap(18, 18, 18)
                .addComponent(subclassesTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastrarFuncionárioButton)
                    .addComponent(buscarFuncionárioButton)
                    .addComponent(atualizarFuncionárioButton)
                    .addComponent(removerFuncionárioButton)
                    .addComponent(limparCamposButton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeFuncionárioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeFuncionárioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeFuncionárioTextFieldActionPerformed

    private void cargoFuncionárioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargoFuncionárioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargoFuncionárioTextFieldActionPerformed

    private void salárioFuncionárioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salárioFuncionárioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salárioFuncionárioTextFieldActionPerformed

    private void cadastrarFuncionárioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarFuncionárioButtonActionPerformed
        String cpf = cpfFuncionárioTextField.getText().trim();
        String nome = nomeFuncionárioTextField.getText().trim();
        String cargo = cargoFuncionárioTextField.getText().trim();
        double salario = 0.0;

        try {
            salario = Double.parseDouble(salárioFuncionárioTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Salário inválido!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Funcionário.EstadoCivil estadoCivil = null;
        ButtonModel selectedEstadoCivilButton = estadoCivilButtonGroup.getSelection();
        System.out.println(selectedEstadoCivilButton);
        if (selectedEstadoCivilButton != null) {
            String selectedEstadoCivilStr = selectedEstadoCivilButton.getActionCommand();
            try {
                int selectedMnemonic = Integer.parseInt(selectedEstadoCivilStr);
                for (Funcionário.EstadoCivil ec : Funcionário.EstadoCivil.values()) {
                    if (ec.getMnemonic() == selectedMnemonic) {
                        estadoCivil = ec;
                        break;
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Estado Civil inválido!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        Funcionário.Gênero genero = null;
        ButtonModel selectedGeneroButton = generoButtonGroup.getSelection();
        if (selectedGeneroButton != null) {
            char selectedMnemonic = selectedGeneroButton.getActionCommand().charAt(0);
            for (Funcionário.Gênero g : Funcionário.Gênero.values()) {
                if (g.getMnemonic() == selectedMnemonic) {
                    genero = g;
                    break;
                }
            }
        }

        boolean ativo = ativoCheckBox.isSelected();

        if(controladorFuncionário.verificarCpfExistente(cpf)){
            JOptionPane.showMessageDialog(null, "CPF já cadastrado!", "Alerta", JOptionPane.WARNING_MESSAGE);
            return;
        }

        controladorFuncionário.adicionarFuncionário(cpf, nome, cargo, salario, estadoCivil, genero, ativo);
        this.inicializarListaFuncionários();

        this.limparTextos();
    }//GEN-LAST:event_cadastrarFuncionárioButtonActionPerformed
 
    private void atualizarFuncionárioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarFuncionárioButtonActionPerformed
        String idText = idFuncionárioTextField.getText();
        String salarioText = salárioFuncionárioTextField.getText();
        String cpf = cpfFuncionárioTextField.getText();
        String nome = nomeFuncionárioTextField.getText().replace("-", "");
        String cargo = cargoFuncionárioTextField.getText();

        if (idText.isEmpty() || salarioText.isEmpty() || cpf.isEmpty() || nome.isEmpty() || cargo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos.", "Alerta", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int id;
        double salario;

        try {
            id = Integer.parseInt(idText);
            salario = Double.parseDouble(salarioText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ID ou Salário inválidos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Funcionário.EstadoCivil estadoCivil = null;
        ButtonModel selectedEstadoCivilButton = estadoCivilButtonGroup.getSelection();

        if (selectedEstadoCivilButton != null) {
            String selectedMnemonicStr = selectedEstadoCivilButton.getActionCommand();
            int selectedMnemonic = Integer.parseInt(selectedMnemonicStr);
            for (Funcionário.EstadoCivil ec : Funcionário.EstadoCivil.values()) {
                if (ec.getMnemonic() == selectedMnemonic) {
                    estadoCivil = ec;
                    break;
                }
            }
        }

        Funcionário.Gênero genero = null;
        ButtonModel selectedGeneroButton = generoButtonGroup.getSelection();

        if (selectedGeneroButton != null) {
            char selectedMnemonic = selectedGeneroButton.getActionCommand().charAt(0);
            for (Funcionário.Gênero g : Funcionário.Gênero.values()) {
                if (g.getMnemonic() == selectedMnemonic) {
                    genero = g;
                    break;
                }
            }
        }

        boolean ativo = ativoCheckBox.isSelected();

        controladorFuncionário.atualizarFuncionario(id, cpf, nome, cargo, salario, estadoCivil, genero, ativo);

        this.inicializarListaFuncionários();
        this.limparTextos();
    }//GEN-LAST:event_atualizarFuncionárioButtonActionPerformed

    private void limparCamposButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparCamposButtonActionPerformed
        this.limparTextos();
    }//GEN-LAST:event_limparCamposButtonActionPerformed

    private void removerFuncionárioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerFuncionárioButtonActionPerformed
        int id = Integer.parseInt(idFuncionárioTextField.getText());

        controladorFuncionário.removerFuncionário(id);
        this.limparTextos();
        this.inicializarListaFuncionários();
    }//GEN-LAST:event_removerFuncionárioButtonActionPerformed

    private void buscarFuncionárioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarFuncionárioButtonActionPerformed
        String cpf = cpfFuncionárioTextField.getText();
        Funcionário funcionário = controladorFuncionário.buscarFuncionárioPorCpf(cpf);

        if (funcionário != null) {
            this.selecionarFuncionárioList(funcionário.getNomeECPF());
            this.preencherCampos(funcionário);;
        } else {
            JOptionPane.showMessageDialog(null, "Não encontrado nenhum funcionário com esse CPF!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buscarFuncionárioButtonActionPerformed

    private void cpfFuncionárioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfFuncionárioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfFuncionárioTextFieldActionPerformed

    private void funcionáriosCadastradosListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_funcionáriosCadastradosListValueChanged
        if (!evt.getValueIsAdjusting()) {
            DefaultListModel<String> funcionárioSelecionado = (DefaultListModel<String>) funcionáriosCadastradosList.getModel();
            int funcionárioSelecionadoIndex = funcionáriosCadastradosList.getSelectedIndex();
            if (funcionárioSelecionadoIndex != -1) {
                String[] nomeCPF = funcionárioSelecionado.getElementAt(funcionárioSelecionadoIndex).split(" - ");
                // Dividindo novamente a string para extrair CPF
                String[] partes = nomeCPF[0].split(" ");
                String cpf = nomeCPF[1].trim(); // Pega a parte do CPF
                Funcionário funcionário = controladorFuncionário.buscarFuncionárioPorCpf(cpf);
                this.preencherCampos(funcionário);
            }
        }
    }//GEN-LAST:event_funcionáriosCadastradosListValueChanged

    private void masculinoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masculinoRadioButtonActionPerformed
        masculinoRadioButton.setActionCommand("M");
    }//GEN-LAST:event_masculinoRadioButtonActionPerformed

    private void femininoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femininoRadioButtonActionPerformed
        masculinoRadioButton.setActionCommand("F");
    }//GEN-LAST:event_femininoRadioButtonActionPerformed

    private void ativoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ativoCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ativoCheckBoxActionPerformed

    private void departamentoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departamentoTextFieldActionPerformed

    private void umPontoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umPontoRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_umPontoRadioButtonActionPerformed

    private void tresPontosRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresPontosRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tresPontosRadioButtonActionPerformed

    private void cargaHorariaTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cargaHorariaTextFieldKeyTyped
        char caracteres = evt.getKeyChar();
        
        if(!Character.isDigit(caracteres)){
            evt.consume();
        }
    }//GEN-LAST:event_cargaHorariaTextFieldKeyTyped

    private void duracaoContratoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracaoContratoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_duracaoContratoTextFieldActionPerformed

    private void salárioFuncionárioTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salárioFuncionárioTextFieldKeyTyped
        char caracteres = evt.getKeyChar();
        
        if(!Character.isDigit(caracteres)){
            evt.consume();
        }
    }//GEN-LAST:event_salárioFuncionárioTextFieldKeyTyped

    private void idFuncionárioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFuncionárioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFuncionárioTextFieldActionPerformed

    private void solteiroRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solteiroRadioButtonActionPerformed
        solteiroRadioButton.setActionCommand("0");
    }//GEN-LAST:event_solteiroRadioButtonActionPerformed

    private void casadoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casadoRadioButtonActionPerformed
        casadoRadioButton.setActionCommand("1");
    }//GEN-LAST:event_casadoRadioButtonActionPerformed

    private void divorciadoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divorciadoRadioButtonActionPerformed
        divorciadoRadioButton.setActionCommand("2");
    }//GEN-LAST:event_divorciadoRadioButtonActionPerformed

    private void viúvoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viúvoRadioButtonActionPerformed
        viúvoRadioButton.setActionCommand("3");
    }//GEN-LAST:event_viúvoRadioButtonActionPerformed
    
    private void selecionarFuncionárioList(String funcionário) {
        int index = -1;
        for (int i = 0; i < funcionáriosCadastradosList.getModel().getSize(); i++) {
            if (funcionáriosCadastradosList.getModel().getElementAt(i).equals(funcionário)) {
                index = i;
                break;
            }
        }

        // Definir o item desejado como selecionado
        if (index != -1) {
            funcionáriosCadastradosList.setSelectedIndex(index);
        }
    }
    
    private void inicializarListaFuncionários() {
        DefaultListModel<String> funcionárioListModel = new DefaultListModel<>();

        List<Funcionário> funcionários = controladorFuncionário.listarFuncionários();
        for (Funcionário funcionário : funcionários) {
            funcionárioListModel.addElement(funcionário.getNomeECPF());
        }

        funcionáriosCadastradosList.setModel(funcionárioListModel);
    }
    
    private void preencherCampos(Funcionário funcionário) {
        idFuncionárioTextField.setText(String.valueOf(funcionário.getId()));
        cpfFuncionárioTextField.setText(String.valueOf(funcionário.getCPF()));
        nomeFuncionárioTextField.setText(funcionário.getNome());
        cargoFuncionárioTextField.setText(funcionário.getCargo());
        salárioFuncionárioTextField.setText(String.valueOf(funcionário.getSalário()));

        if(funcionário.getGênero() == Funcionário.Gênero.MASCULINO) {
            masculinoRadioButton.setSelected(true);
        } else if(funcionário.getGênero() == Funcionário.Gênero.FEMININO) {
            femininoRadioButton.setSelected(true);
        }

        switch (funcionário.getEstadoCivil()) {
            case SOLTEIRO:
                solteiroRadioButton.setSelected(true);
                break;
            case CASADO:
                casadoRadioButton.setSelected(true);
                break;
        }
        ativoCheckBox.setSelected(funcionário.getAtivo());
    }

    private void limparTextos(){
        idFuncionárioTextField.setText("");
        nomeFuncionárioTextField.setText("");
        cargoFuncionárioTextField.setText("");
        salárioFuncionárioTextField.setText("");
        cpfFuncionárioTextField.setText("");

        generoButtonGroup.clearSelection();
        estadoCivilButtonGroup.clearSelection();
        ativoCheckBox.setSelected(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFuncionários.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFuncionários.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFuncionários.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFuncionários.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaCadastroFuncionários().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ativoCheckBox;
    private javax.swing.JLabel ativoFuncionárioLabel;
    private javax.swing.JButton atualizarFuncionárioButton;
    private javax.swing.JLabel avaliaçãoDesempenhoLabel;
    private javax.swing.JButton buscarFuncionárioButton;
    private javax.swing.JButton cadastrarFuncionárioButton;
    private javax.swing.JLabel cargaHorariaLabel;
    private javax.swing.JTextField cargaHorariaTextField;
    private javax.swing.JLabel cargoFuncionárioLabel;
    private javax.swing.JTextField cargoFuncionárioTextField;
    private javax.swing.JRadioButton casadoRadioButton;
    private javax.swing.JRadioButton cincoPontosRadioButton;
    private javax.swing.JLabel cpfFuncionárioLabel;
    private javax.swing.JTextField cpfFuncionárioTextField;
    private javax.swing.JLabel cursoLabel;
    private javax.swing.JTextField cursoTextField;
    private javax.swing.JTextField departamentoTextField;
    private javax.swing.JRadioButton divorciadoRadioButton;
    private javax.swing.JRadioButton doisPontoRadioButton;
    private javax.swing.JTextField duracaoContratoTextField;
    private javax.swing.JLabel duraçãoContratoLabel;
    private javax.swing.JPanel empregadoPanel;
    private javax.swing.JLabel empresaContratadaLabel;
    private javax.swing.JTextField empresaContratadaTextField;
    private javax.swing.ButtonGroup estadoCivilButtonGroup;
    private javax.swing.JLabel estadoCivilFuncionárioLabel;
    private javax.swing.JPanel estagiárioPanel;
    private javax.swing.JRadioButton femininoRadioButton;
    private javax.swing.JList<String> funcionáriosCadastradosList;
    private javax.swing.JScrollPane funcionáriosScrollPane;
    private javax.swing.ButtonGroup generoButtonGroup;
    private javax.swing.JLabel generoFuncionárioLabel;
    private javax.swing.JLabel idFuncionárioLabel;
    private javax.swing.JTextField idFuncionárioTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton limparCamposButton;
    private javax.swing.JLabel listagemFuncionáriosLabel;
    private javax.swing.JRadioButton masculinoRadioButton;
    private javax.swing.JLabel nomeFuncionárioLabel;
    private javax.swing.JTextField nomeFuncionárioTextField;
    private javax.swing.ButtonGroup pontuaçãoButtonGroup;
    private javax.swing.JRadioButton quatroPontoRadioButton;
    private javax.swing.JButton removerFuncionárioButton;
    private javax.swing.JLabel salárioFuncionárioLabel;
    private javax.swing.JTextField salárioFuncionárioTextField;
    private javax.swing.JRadioButton solteiroRadioButton;
    private javax.swing.JTabbedPane subclassesTabbedPane;
    private javax.swing.JPanel terceirizadoPanel;
    private javax.swing.JRadioButton tresPontosRadioButton;
    private javax.swing.JRadioButton umPontoRadioButton;
    private javax.swing.JRadioButton viúvoRadioButton;
    // End of variables declaration//GEN-END:variables
}
